# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import uic

# from song_item_design import Ui_SongItem
# from main_design import Ui_MainWindow
SONG_ITEM_UI_PATH = 'GUI/songitem.ui'
MAIN_WINDOW_UI_PATH = 'GUI/main_window.ui'

PLAYBACK_DIR = 'music/'

class SongWidget(QtWidgets.QWidget):
    def __init__(self, name):
        super().__init__()
        uic.loadUi(SONG_ITEM_UI_PATH, self)
        self.labelSongName.setText(name)


class ClickerPlayerApp(QtWidgets.QMainWindow):
    def __init__(self, playback_dir):
        super().__init__()
        uic.loadUi(MAIN_WINDOW_UI_PATH, self)
        self.playback_dir = playback_dir
        self.files = os.listdir(playback_dir)
        self.songs = []
        for song_name in self.files:
            song = SongWidget(song_name)
            self.add_song(song)
        
        
    def add_song(self, song):
        item = QtWidgets.QListWidgetItem()
        item.setSizeHint(song.sizeHint())
        self.songsList.addItem(item)
        self.songsList.setItemWidget(item, song)


def main():
    app = QtWidgets.QApplication(sys.argv)  # Новый экземпляр QApplication
    window = ClickerPlayerApp(PLAYBACK_DIR) 
    window.show()  # Показываем окно
    app.exec_()  # и запускаем приложение
    exit()

if __name__ == '__main__':  # Если мы запускаем файл напрямую, а не импортируем
    main()  # то запускаем функцию main()